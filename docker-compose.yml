version: '3.8'

services:
  rabbitmq1:
    image: rabbitmq:3.8-management
    hostname: rabbitmq1
    container_name: rabbitmq1
    environment:
      RABBITMQ_ERLANG_COOKIE: 'secretcookie'
      RABBITMQ_NODENAME: 'rabbit@rabbitmq1'
    networks:
      rabbitmq_network:
        aliases:
          - rabbitmq.test
    command: >
      bash -c "
        rabbitmq-server -detached;
        sleep 10;
        rabbitmqctl stop_app;
        rabbitmqctl reset;
        rabbitmqctl start_app;
        rabbitmqctl set_policy ha-all "" '{"ha-mode":"all","ha-sync-mode":"automatic"}'
        rabbitmqctl await_startup;
        tail -f /dev/null
      "

  rabbitmq2:
    image: rabbitmq:3.8-management
    hostname: rabbitmq2
    container_name: rabbitmq2
    environment:
      RABBITMQ_ERLANG_COOKIE: 'secretcookie'
      RABBITMQ_NODENAME: 'rabbit@rabbitmq2'
    depends_on:
      - rabbitmq1
    networks:
      rabbitmq_network:
        aliases:
          - rabbitmq.test
    command: >
      bash -c "
        rabbitmq-server -detached;
        sleep 10;
        rabbitmqctl stop_app;
        rabbitmqctl reset;
        rabbitmqctl join_cluster rabbit@rabbitmq1;
        rabbitmqctl start_app;
        rabbitmqctl await_startup;
        tail -f /dev/null
      "

  rabbitmq3:
    image: rabbitmq:3.8-management
    hostname: rabbitmq3
    container_name: rabbitmq3
    environment:
      RABBITMQ_ERLANG_COOKIE: 'secretcookie'
      RABBITMQ_NODENAME: 'rabbit@rabbitmq3'
    depends_on:
      - rabbitmq1
      - rabbitmq2
    networks:
      rabbitmq_network:
        aliases:
          - rabbitmq.test
    command: >
      bash -c "
        rabbitmq-server -detached;
        sleep 10;
        rabbitmqctl stop_app;
        rabbitmqctl reset;
        rabbitmqctl join_cluster rabbit@rabbitmq1;
        rabbitmqctl start_app;
        rabbitmqctl await_startup;
        tail -f /dev/null
      "

networks:
  rabbitmq_network:
    driver: bridge
